name: Build new version

on:
  push:
    tags:
    - v*
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false
      debug_detached:
        type: boolean
        description: 'Run tmate session as detached'
        required: false
        default: false
      draft_release:
        type: boolean
        description: 'Create draft release'
        required: false
        default: false
      no_publish:
        type: boolean
        description: 'Don''t publish (no release, no manifest update, no upload to repo'
        required: false
        default: false
      skip_tests:
        type: boolean
        description: 'Skip unit tests step'
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      REPO_URL: https://subzeropl.mywire.org
      PROJECT_NAME: IvInfo
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9.*
      - name: Install jprm
        run: pip install --user jprm
        shell: sh
      - name: Init repo
        run: |
          mkdir repo
          cp manifest.json repo/
        shell: sh
      - name: Build plugin
        run: jprm --verbosity debug plugin build --output ./repo --dotnet-framework net6.0 .
        shell: sh
      - name: Run tests
        run: dotnet test --nologo -c Release -v normal --filter "Category!=GithubSkip"
        shell: pwsh
        if: ${{ !inputs.skip_tests }}
      - name: Get version
        id: get_version
        run: echo "version=$((Select-Xml -Path .\$( $env:PROJECT_NAME )\$( $env:PROJECT_NAME ).csproj -XPath '/Project/PropertyGroup/AssemblyVersion').Node.InnerXML)" >> $env:GITHUB_OUTPUT
        shell: pwsh
      - name: Add to manifest
        run: jprm --verbosity debug repo add --plugin-url https://github.com/SubZeroPL/Jellyfin.Plugin.IvInfo/releases/download/v${{ steps.get_version.outputs.version }}/ivinfo_${{ steps.get_version.outputs.version }}.zip ./repo ./repo/ivinfo_${{ steps.get_version.outputs.version }}.zip
        shell: sh
      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Draft Release
        id: create_draft_release
        uses: ncipollo/release-action@v1
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.draft_release && !inputs.no_publish }}
        with:
          artifacts: repo/ivinfo_${{ steps.get_version.outputs.version }}.zip
          name: Jellyfin.Plugin.IvInfo Release v${{ steps.get_version.outputs.version }}
          tag: prerelease
          commit: master
          prerelease: true
          draft: true
          generateReleaseNotes: true
          body: |
            ## Release
            Jellyfin.Plugin.IvInfo v${{ steps.get_version.outputs.version }}
            ---
            ${{ steps.changelog.outputs.changes }}
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        if: ${{ !inputs.draft_release && !inputs.no_publish }}
        with:
          artifacts: repo/ivinfo_${{ steps.get_version.outputs.version }}.zip
          name: Jellyfin.Plugin.IvInfo Release v${{ steps.get_version.outputs.version }}
          prerelease: false
          draft: false
          generateReleaseNotes: true
          body: |
            ## Release
            Jellyfin.Plugin.IvInfo v${{ steps.get_version.outputs.version }}
            ---
            ${{ steps.changelog.outputs.changes }}
      - name: Post release to repo
        run: curl -F plugin_name=IvInfo -F zip_file=@repo/ivinfo_${{ steps.get_version.outputs.version }}.zip -F manifest_file=@repo/manifest.json $REPO_URL/jf-plugin-repo/release.php
        shell: sh
        if: ${{ !inputs.no_publish && false }}
      - name: Push updated manifest to git
        run: |
          git checkout master
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          mv ./repo/manifest.json ./
          git add manifest.json
          git commit -m "Updated manifest.json\n\nversion ${{ steps.get_version.outputs.version }}"
          git push
        shell: sh
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          detached: ${{ inputs.debug_detached }}
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
