name: Build new version

on:
  push:
    tags:
    - v*
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Get version
      id: get_version
      run: echo "::set-output name=version::$((Select-Xml -Path .\Jellyfin.Plugin.IvInfo.csproj -XPath "/Project/PropertyGroup/AssemblyVersion").Node.InnerXML)"
      shell: pwsh
    - name: Copy files
      run: |
        pwd && ls && ls bin && ls bin/Release && ls bin/Release/net5.0 &&
        mkdir -p release${{ steps.get_version.outputs.version }} &&
        cd release${{ steps.get_version.outputs.version }} &&
        cp bin/Release/net5.0/Jellyfin.Plugin.IvInfo.dll ./ &&
        cp bin/Release/net5.0/HtmlAgilityPack.dll ./ &&
        pwd && ls
    - name: Zip Release
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'release${{ steps.get_version.outputs.version }}.zip'
        path: release${{ steps.get_version.outputs.version }}/
        directory: release${{ steps.get_version.outputs.version }}/
    - name: Upload zip artifact
      uses: actions/upload-artifact@v2
      with:
        name: release${{ steps.get_version.outputs.version }}
        path: release${{ steps.get_version.outputs.version }}/release${{ steps.get_version.outputs.version }}.zip
